{% macro classes(name) %}
  {% set _field = app._field(name) %}
  {% if _field is not empty %}
    {% if _field.isError %}has-error{% else %}has-success{% endif %}
  {% endif %}
  {#{% if _field is not empty and _field.isError %}has-error{% endif %}#}
{% endmacro %}

{% macro messages(name, hClass) %}
  {% set _field = app._field(name) %}
  {% set hClass = hclass|default('help-block') %}
  {% if _field is not empty and _field.isError %}
    {% for text in _field.getText %}
      <span class="{{ hClass }}">{{ text }}</span>
    {% endfor %}
  {% else %}
    <span class="{{ hClass }}"></span>
  {% endif %}
{% endmacro %}

{% macro _form_element_attrs(opts) %}
  {% set name = opts.name| default('') %}
  {% if opts.type in ['radio'] and opts.id is empty %}
    {% set id = name ~ '-' ~ opts.value %}
  {% else %}
    {% set id = opts.id|default(name) %}
  {% endif %}
  {% if id is not empty %}
    id="{{ id }}"
  {% endif %}
  {% if name is not empty %}
    name="{{ opts.name }}"
  {% endif %}
  class="{{ opts.inputClass }}"
  {% if opts.autocomplete is defined %}autocomplete="{{ opts.autocomplete ? "on" : "off" }}"{% endif %}
  {% if opts.autofocus is defined and opts.autofocus %}autofocus="autofocus"{% endif %}
  {% if opts.tabindex is defined and opts.tabindex > 0 %}tabindex="{{ opts.tabindex }}"{% endif %}
  {% if opts.style is defined and opts.style is not empty %}style="{{ opts.style }}"{% endif %}
  {% for key,val in opts.data|default({}) %}
    data-{{ key }}="{{ val }}"
  {% endfor %}
{% endmacro %}

{% macro _form_input_attrs(opts, value) %}
  type="{{ opts.type }}"
  placeholder="{{ opts.placeholder|default(opts.label) }}"
  {% if opts.required is defined and opts.required %}required="required"{% endif %}
  {% if opts.type in ['checkbox'] %}
    {{ value is empty ? '' : 'checked="checked"' }}
    value="1"
  {% elseif opts.type in ['radio'] %}
    {{ value != opts.value ? '' : 'checked="checked"' }}
    value="{{ opts.value }}"
  {% else %}
    value="{{ value }}"
  {% endif %}
{% endmacro %}

{% macro _form_select_attrs(opts) %}
  {% if opts.multiple %}multiple="multiple"{% endif %}
{% endmacro %}

{% macro _form_textarea_attrs(opts) %}
  {% if opts.rows %}rows="{{ opts.rows }}"{% endif %}
  {% if opts.cols %}cols="{{ opts.cols }}"{% endif %}
{% endmacro %}

{% macro label(opts) %}
  {% if opts.type in ['radio'] and opts.id is empty %}
    {% set id = opts.name| default('') ~ '-' ~ opts.value %}
  {% else %}
    {% set id = opts.id|default(opts.name| default('')) %}
  {% endif %}
  {% if opts.label is not empty %}
    <label class="{{ opts.labelClass }}" for="{{ id }}">
      {{ opts.label|raw }}
    </label>
  {% endif %}
{% endmacro %}

{% macro _addon(opts) %}
  {% if not opts is iterable %}
    {% set opts = {
    type: 'addon',
    html: opts,
    } %}
  {% endif %}
  {% if opts.type == 'addon' %}
    <span class="input-group-addon">{{ opts.html|raw }}</span>
  {% else %}
    <span class="input-group-btn">{{ opts.html|raw }}</span>
  {% endif %}
{% endmacro %}

{% macro _input(opts, value) %}
  {% import _self as self %}
  {% set opts = {
  addon: null,
  }|merge(opts|default({})) %}
  {% if opts.addon is not empty %}
    <div class="input-group">
      {% if opts.addon.l is defined %}
        {{ self._addon(opts.addon.l) }}
      {% endif %}
      {{ self.input(opts|merge({addon: null})) }}
      {% if opts.addon.r is defined %}
        {{ self._addon(opts.addon.r) }}
      {% endif %}
    </div>
  {% else %}
    <input {{ self._form_element_attrs(opts) }} {{ self._form_input_attrs(opts, value) }}/>
  {% endif %}

{% endmacro %}

{% macro _select(opts, value) %}
  {% import _self as self %}
  {% set opts = {
  type: 'select',
  multiple: false,
  clear: false,
  options: {},
  }|merge(opts|default({})) %}
  {% if not opts.multiple %}
    {% set value = [value] %}
  {% endif %}
  <select {{ self._form_element_attrs(opts) }} {{ self._form_select_attrs(opts) }}>
    {% if opts.clear is not empty %}
      {% set clear = opts.clear is iterable ? {html: 'N/a', value: '', style: ''}|merge(opts.clear) : {
      html: opts.clear,
      value: '',
      style: 'display: none',
      } %}
      <option data-hidden="true" value="{{ clear.value }}" style="{{ clear.style }}">{{ clear.html|raw }}</option>
    {% endif %}
    {% for key, lbl in opts.options %}
      <option value="{{ key }}" {{ key in value ? 'selected="selected"': '' }}>{{ lbl|raw }}</option>
    {% endfor %}
  </select>

{% endmacro %}

{% macro _textarea(opts, value) %}
  {% import _self as self %}
  {% set opts = {
  type: 'textarea',
  cols: null,
  rows: null,
  }|merge(opts|default({})) %}
  <textarea {{ self._form_element_attrs(opts) }} {{ self._form_textarea_attrs(opts) }}>{{ value|raw }}</textarea>
{% endmacro %}

{% macro input(opts) %}
  {% import _self as self %}
  {% set opts = {
  id: null,
  name: '',
  data: {},
  value: null,
  default: null,
  placeholder: null,
  autocomplete: false,
  disabled: false,
  readonly: false,
  required: false,
  }|merge(opts|default({})) %}
  {% set value = app._value(opts.name, opts.default|default(opts.value)) %}
  {% if opts.type in ['select'] %}
    {{ self._select(opts, value) }}
  {% elseif opts.type in ['textarea'] %}
    {{ self._textarea(opts, value) }}
  {% else %}
    {{ self._input(opts, value) }}
  {% endif %}
{% endmacro %}

{% macro _field_date(opts) %}
  {% import _self as self %}
  {% set value = app._value(opts.name, opts.default|default(opts.value)) %}
  {% set value = value|default('--')|split('-') %}
  {% set value = {y: value[0], m: value[1], d: value[2]} %}
  {% set clear = opts.clear is defined ? opts.clear : false %}
  {% if clear is not iterable %}
    {% set clear = {y: clear, m: clear, d: clear} %}
  {% endif %}
  {% set partsClass = opts.partsClass is defined ? opts.partsClass : '' %}
  {% if partsClass is not iterable %}
    {% set partsClass = {y:partsClass, m: partsClass, d: partsClass} %}
  {% endif %}
  {% set options = {
  y: dateY(opts.yearsUpper|default(null), opts.yearsLower|default(null)),
  m: dateM(opts.months|default(true)),
  d: dateD(),
  } %}
  {{ self.label(opts) }}
  <div class="row">
    {% for part in (opts.format|default('dmy'))|split('') %}
      <div class="{{ partsClass[part] }}">
        {{ self._select({
          inputClass: opts.inputClass,
          autocomplete: false,
          data: {fld: part},
          clear: clear[part],
          options: options[part],
        }, value[part]) }}
      </div>
    {% endfor %}
  </div>
  {% if clear is not empty %}
    <button type="button" class="btn btn-link btn-xs pull-right" aria-hidden="true" style="display: none;">
      {{ opts.clearButton|default('Clear') }}
    </button>
  {% endif %}
{% endmacro %}

{% macro field(opts) %}
  {% import _self as self %}
  {% set opts = {
  id: null,
  name: '',
  type: 'text',
  value: null,
  default: null,
  style: null,
  inline: false,
  groupClass: 'form-group',
  labelClass: 'control-label',
  inputClass: 'form-control',
  label: null,
  placeholder: null,
  autocomplete: false,
  autofocus: false,
  tabindex: 0,
  }|merge(opts|default({})) %}

  {% if opts.type in ['date'] %}
    {{ self.input(opts|merge({type: 'hidden'})) }}
    <div class="{{ opts.groupClass }} {{ self.classes(opts.name) }}">
      {{ self._field_date(opts) }}
      {{ self.messages(opts.name) }}
    </div>
  {% else %}
    {% if opts.type in ['hidden'] %}
      {{ self.input(opts) }}
    {% else %}
      <div class="{{ opts.groupClass }} {{ self.classes(opts.name) }}">
        {% if opts.type in ['radio'] %}
          {{ self.label(opts) }}
          {% if opts.inline %}
            <div>
              {% for value, label in opts.options|default({}) %}
                {{ self.label(opts|merge({
                  value: value,
                  labelClass: 'radio-inline ' ~ opts.inputClass,
                  label:  self.input(opts|merge({inputClass: null, value: value, default: opts.value})) ~ label,
                })) }}
              {% endfor %}
            </div>
          {% else %}
            {% for value, label in opts.options|default({}) %}
              <div class="{{ opts.type }}">
                {{ self.label(opts|merge({
                  value: value,
                  label:  self.input(opts|merge({inputClass: null, value: value})) ~ label,
                })) }}
              </div>
            {% endfor %}
          {% endif %}
        {% elseif opts.type in ['checkbox'] %}
          <div class="{{ opts.type }}">
            {% if opts.label is not empty %}
              {{ self.label(opts|merge({
                label:  self.input(opts|merge({inputClass: null})) ~ opts.label,
              })) }}
            {% else %}
              {{ self.input(opts) }}
            {% endif %}
          </div>
        {% elseif opts.type in ['date'] %}
          {{ self.input(opts|merge({type: 'hidden'})) }}
          {{ self._field_date(opts) }}
        {% else %}
          {{ self.label(opts) }}
          {{ self.input(opts) }}
        {% endif %}
        {{ self.messages(opts.name) }}
      </div>
    {% endif %}
  {% endif %}
{% endmacro %}

{% macro hidden(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
    type: 'hidden',
  })) }}
{% endmacro %}

{% macro text(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
    type: 'text',
  })) }}
{% endmacro %}

{% macro pass(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
    type: 'password',
  })) }}
{% endmacro %}

{% macro date(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
    type: 'date',
  })) }}
{% endmacro %}

{% macro check(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
    type: 'checkbox',
  })) }}
{% endmacro %}

{% macro radio(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
    type: 'radio',
  })) }}
{% endmacro %}

{% macro phone(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
    type: 'tel',
  })) }}
{% endmacro %}

{% macro email(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
    type: 'email',
  })) }}
{% endmacro %}

{% macro textarea(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
    type: 'textarea',
  })) }}
{% endmacro %}

{% macro select(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
    type: 'select',
  })) }}
{% endmacro %}
