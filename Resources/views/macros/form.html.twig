{% macro classes(name) %}
  {% set _field = app._field(name) %}
  {% if _field is not empty and _field.isError %}has-error{% endif %}
{% endmacro %}

{% macro messages(name, hClass) %}
  {% set _field = app._field(name) %}
  {% set hClass = hclass|default('help-block') %}
  {% if _field is not empty and _field.isError %}
    {% for text in _field.getText %}
      <span class="{{ hClass }}">{{ text }}</span>
    {% endfor %}
  {% else %}
    <span class="{{ hClass }}"></span>
  {% endif %}
{% endmacro %}

{% macro label(opts) %}
  {% if opts.label is not empty %}
    <label class="{{ opts.labelClass }}" for="{{ opts.name }}">
      {{ opts.label|raw }}
    </label>
  {% endif %}
{% endmacro %}

{% macro input(opts) %}
  {% import _self as self %}
  {% set _field = app._field(opts.name) %}
  {% set value = _field is not empty
  ? _field.getValue
  : app.request.get(opts.name, opts.default|default(opts.value), true) %}

  {% if opts.addon is defined and opts.addon is not empty %}
    <div class="input-group">
      {% if opts.addon.l is defined %}
        <span class="input-group-addon">{{ opts.addon.l|raw }}</span>
      {% endif %}
      {{ self.input(opts|merge({addon: null})) }}
      {% if opts.addon.r is defined %}
        <span class="input-group-addon">{{ opts.addon.r|raw }}</span>
      {% endif %}
    </div>
  {% else %}
    <input class="{{ opts.inputClass }}"
           type="{{ opts.type }}"
           id="{{ opts.id|default(opts.name) }}"
           name="{{ opts.name }}"
           autocomplete="{{ opts.autocomplete ? "on" : "off" }}"
           placeholder="{{ opts.placeholder|default(opts.label) }}"
      {% if opts.type in ['checkbox'] %}
        {{ opts.value is empty ? '' : 'checked="checked"' }}
        value="1"
      {% else %}
        value="{{ opts.value }}"
      {% endif %}
      />
  {% endif %}
{% endmacro %}

{% macro select(opts) %}
  {% import _self as self %}
{% endmacro %}

{% macro _field_date(opts) %}
  {% import _self as self %}
  {% set clear = opts.clear is defined ? opts.clear : false %}
  {% if clear is not iterable %}
    {% set clear = {y: clear, m: clear, d: clear} %}
  {% endif %}
  {% set months = {
  abbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
  full: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  } %}

  {{ self.label(opts) }}
  <div class="row">
    <div class="col-md-4 col-sm-4 col-xs-12">
      <select class="{{ opts.inputClass }}" data-fld="m" autocomlete="off">
        {% if clear is not empty %}
          <option data-hidden="true" value="">{{ clear.m }}</option>
        {% endif %}
        {% for m in 0..11 %}
          <option value="{{ "%02d"|format( m + 1) }}">{{ months.abbr[m] }}</option>
        {% endfor %}
      </select>
    </div>
    <div class="col-md-4 col-sm-4 col-xs-12">
      <select class="{{ opts.inputClass }}" data-fld="d" autocomlete="off">
        {% if clear is not empty %}
          <option data-hidden="true" value="">{{ clear.d }}</option>
        {% endif %}
        {% for d in 0..30 %}
          <option value="{{ "%02d"|format( d + 1) }}">{{ "%02d"|format( d + 1) }}</option>
        {% endfor %}
      </select>
    </div>
    <div class="col-md-4 col-sm-4 col-xs-12">
      <select class="{{ opts.inputClass }}" data-fld="y" autocomlete="off">
        {% if clear is not empty %}
          <option data-hidden="true" value="">{{ clear.y }}</option>
        {% endif %}
        {% for y in opts.year.from..opts.year.till %}
          <option value="{{ y }}">{{ "%04d"|format(y) }}</option>
        {% endfor %}
      </select>
    </div>
  </div>
  {% if clear is not empty %}
    <button type="button" class="btn btn-light pull-right" aria-hidden="true" style="display: none;">
      {{ opts.clearButton|default('Clear') }}
    </button>
  {% endif %}
{% endmacro %}

{% macro field(opts) %}
  {% import _self as self %}
  {% set opts = {
  id: null,
  name: '',
  type: 'text',
  value: null,
  default: null,
  groupClass: 'form-group',
  labelClass: 'control-label',
  inputClass: 'form-control',
  label: null,
  placeholder: null,
  autocomplete: false,
  }|merge(opts|default({})) %}

  {% if opts.type in ['date'] %}
    {{ self.input(opts|merge({type: 'hidden'})) }}
    <div class="{{ opts.groupClass }} {{ self.classes(opts.name) }}">
      {{ self._field_date(opts) }}
      {{ self.messages(opts.name) }}
    </div>
  {% else %}
    <div class="{{ opts.groupClass }} {{ self.classes(opts.name) }}">
      {% if opts.type in ['checkbox', 'radio'] %}
        <div class="{{ opts.type }}">
          {% if opts.label is not empty %}
            {{ self.label(opts|merge({
            label:  self.input(opts|merge({inputClass: null})) ~ opts.label,
            })) }}
          {% else %}
            {{ self.input(opts) }}
          {% endif %}
        </div>
      {% elseif opts.type in ['date'] %}
        {{ self._field_date(opts) }}
      {% else %}
        {{ self.label(opts) }}
        {{ self.input(opts) }}
      {% endif %}
      {{ self.messages(opts.name) }}
    </div>
  {% endif %}
{% endmacro %}

{% macro text(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
  type: 'text',
  })) }}
{% endmacro %}

{% macro date(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
  type: 'date',
  })) }}
{% endmacro %}

{% macro check(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
  type: 'checkbox',
  })) }}
{% endmacro %}

{% macro radio(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
  type: 'radio',
  })) }}
{% endmacro %}

{% macro phone(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
  type: 'tel',
  addon: { l: '<i class="icon-phone"></i>', },
  })) }}
{% endmacro %}

{% macro email(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
  type: 'email',
  addon: { l: '<i class="icon-envelope"></i>', },
  })) }}
{% endmacro %}

{% macro other(opts) %}
  {% import _self as self %}
  {{ self.field(opts|default({})|merge({
  type: 'text',
  addon: { l: '<i class="icon-ellipsis-horizontal"></i>', },
  })) }}
{% endmacro %}
